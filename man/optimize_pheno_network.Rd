% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_pheno_network.R
\name{optimize_pheno_network}
\alias{optimize_pheno_network}
\title{Optimize Phenotype Network with CARNIVAL}
\usage{
optimize_pheno_network(
  sp_object,
  organism,
  phospho_df = NULL,
  carnival_options,
  files,
  direct = FALSE,
  with_atlas = FALSE,
  path_sif = "./pheno_opt_graph.sif",
  path_rds = "./pheno_opt_graph.rds"
)
}
\arguments{
\item{sp_object}{A list containing the SignalingProfiler network, nodes, and edges.}

\item{organism}{A character string specifying the organism (`"human"` or `"mouse"`).}

\item{phospho_df}{An optional tibble containing phosphoproteomics data. Default is `NULL`.}

\item{carnival_options}{A list of options returned by `default_CARNIVAL_options()`.}

\item{files}{Logical, whether to generate output files (`TRUE` or `FALSE`).}

\item{direct}{Logical, whether to use only direct interactions (`TRUE` or `FALSE`, default: `FALSE`).}

\item{with_atlas}{Logical, whether to include Kinome Atlas regulons (`TRUE` or `FALSE`, default: `TRUE`).}

\item{path_sif}{A character string specifying the path for the SIF output file. Default is `'./pheno_opt_graph.sif'`.}

\item{path_rds}{A character string specifying the path for the RDS output file. Default is `'./pheno_opt_graph.rds'`.}
}
\value{
A modified SP object containing the optimized phenotype network.
}
\description{
This function optimizes the protein-to-phenotype network by retrieving only
sign-coherent protein-to-phenotype edges with phenotypes activity.
Optionally it calls [expand_and_map_edges()] to map edges using phosphoproteomics data.
}
\details{
This function:
- Extracts phenotype and non-phenotype nodes from the input network.
- Prepares the edge list in SIF format.
- Runs CARNIVAL-based network optimization.
- If phosphoproteomics data is provided, maps validated edges.
- Returns the updated SP object with the optimized phenotype network.
}
\examples{
\dontrun{
data('toy_sp_object')
carnival_options <- default_CARNIVAL_options(solver = "cplex")
optimize_pheno_network(sp_object = toy_sp_object, organism = 'human', carnival_options)
}
}
