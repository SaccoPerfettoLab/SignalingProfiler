% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/carnival_analysis.R
\name{check_CARNIVAL_inputs}
\alias{check_CARNIVAL_inputs}
\title{Validate CARNIVAL Input Data}
\usage{
check_CARNIVAL_inputs(
  source_df,
  target_df,
  naive_network,
  proteins_df,
  organism
)
}
\arguments{
\item{source_df}{A tibble containing source nodes (perturbations) with discretized values of 1 and -1.
Can be `NULL` if running an inverse CARNIVAL analysis.}

\item{target_df}{A tibble containing target nodes (e.g., transcription factors, kinases)
with continuous activity scores.}

\item{naive_network}{A tibble representing the naive network in SIF format, containing
three columns: `source`, `interaction`, and `target`.}

\item{proteins_df}{A tibble of inferred proteins with associated metadata, including
molecular function (*mf*) and method of protein inference (*method*).}

\item{organism}{A string specifying the organism being analyzed.
Valid options are `"mouse"` or `"human"`.}
}
\value{
Returns `TRUE` if all input data passes validation.
Otherwise, stops execution with an error message.
}
\description{
This function verifies the integrity of input data provided to CARNIVAL,
ensuring that all required elements are correctly formatted and present.
It checks the source nodes, target nodes, naive network structure,
inferred protein data, and organism type.
}
\examples{
# Example dataset of perturbations (source nodes)
toy_carnival_input <- data.frame(UNIPROT = c('P42345', 'SIGNOR-C15', 'P31749', 'P15336'),
          gene_name = c('MTOR', 'AMPK', 'AKT1', 'ATF2'),
          mf = c('rec', 'rec', 'kin', 'tf'),
          method = c('user', 'user', 'VIPER', 'VIPER'),
          final_score = c(-1, 1, -2.64, 4.48))
          
source_df <- toy_carnival_input \%>\% dplyr::filter(mf == 'rec')

# Example dataset of targets (continuous values)
target_df <- toy_carnival_input \%>\% dplyr::filter(mf \%in\% c('kin', 'phos', 'other'))

# Example naive network in SIF format
naive_network <- data.frame(source = c('MTOR', 'AMPK'), interaction = c(1, -1), target = c('ATM', 'CDK2'))

# Example inferred protein dataset
data(toy_prot_activity_df)
proteins_df <- toy_prot_activity_df

# Run validation
check_CARNIVAL_inputs(source_df, target_df, naive_network, proteins_df, organism = "human")
}
