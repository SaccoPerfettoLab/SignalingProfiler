% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_signaling_cascade.R
\name{remove_signaling_cascade}
\alias{remove_signaling_cascade}
\title{Remove Signaling Cascade Regulators}
\usage{
remove_signaling_cascade(input_prot_paths, sp_graph)
}
\arguments{
\item{input_prot_paths}{A dataframe containing protein-phenotypes paths,
including regulatory effects (`Effect`), query proteins (`QueryNode`),
and target phenotypes (`EndPathways`).}

\item{sp_graph}{An `igraph` object representing the signaling network
from SignalingProfiler.}
}
\value{
A filtered dataframe containing only paths of
 proteins that are not part of redundant signaling cascades.
}
\description{
This function filters out proteins involved in signaling cascades
that regulate the same phenotype multiple times, ensuring only
direct regulatory relationships remain.
}
\details{
The function identifies proteins that regulate the same phenotype multiple times
and removes those that are downstream in the signaling cascade.
It evaluates the shortest path distance between proteins using the provided
`sp_graph`, considering both forward (A → B) and reverse (B → A) connections.

If no redundant cascade regulators are found, the input dataframe
is returned unchanged.
}
\examples{
library(igraph)
library(dplyr)

# Example input data
input_data <- data.frame(
  QueryNode = c("TP53", "AKT1", "MAPK1"),
  EndPathways = c("APOPTOSIS", "APOPTOSIS", "APOPTOSIS"),
  Effect = c("up-regulates", "up-regulates", "down-regulates")
)

# Example graph
example_graph <- graph_from_edgelist(
  matrix(c("TP53", "AKT1", "AKT1", "MAPK1"), ncol = 2, byrow = TRUE),
  directed = TRUE
)

# Run cascade removal
filtered_paths <- remove_signaling_cascade(input_data, example_graph)
print(filtered_paths)

}
