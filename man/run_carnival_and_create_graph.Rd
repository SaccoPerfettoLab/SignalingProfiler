% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/carnival_analysis.R
\name{run_carnival_and_create_graph}
\alias{run_carnival_and_create_graph}
\title{Run CARNIVAL and Create an Optimized Network Graph}
\usage{
run_carnival_and_create_graph(
  source_df,
  target_df,
  naive_network,
  carnival_options,
  proteins_df,
  organism,
  with_atlas = TRUE,
  direct = FALSE,
  files = TRUE,
  path_sif = "./optimized_network.sif",
  path_rds = "./optimized_SP_object.RDS"
)
}
\arguments{
\item{source_df}{A tibble containing source nodes (perturbations) with discretized values (1 or -1).
If `NULL`, the function runs **Inverse CARNIVAL** (i.e., without perturbations).}

\item{target_df}{A tibble containing target nodes (e.g., transcription factors, kinases)
with continuous activity scores.}

\item{naive_network}{A tibble representing the naive network in SIF format, containing
three columns: `source`, `interaction`, and `target`.}

\item{carnival_options}{A list of optimization options generated by `default_CARNIVAL_options()`.}

\item{proteins_df}{A tibble of inferred proteins with associated metadata, including
molecular functions and the method of inference.}

\item{organism}{A string specifying the organism being analyzed. Valid options: `"mouse"` or `"human"`.}

\item{with_atlas}{Logical, `TRUE` (default) includes a Prior Knowledge Network integrated with Kinome Atlas-derived regulons, `FALSE` excludes them.}

\item{direct}{Logical, `FALSE` (default) allows both direct and indirect interactions; `TRUE` uses only direct interactions.}

\item{files}{Logical, `TRUE` (default) saves output files, `FALSE` runs analysis without saving files.}

\item{path_sif}{A string specifying the output file path for the optimized network in **SIF format**.}

\item{path_rds}{A string specifying the output file path for the optimized **RDS object**.}
}
\value{
*SP_object*, a list  containing:
\itemize{
  \item `igraph_network` - An igraph object representing the optimized network.
  \item `nodes_df` - A dataframe with node attributes, including inferred activity scores.
  \item `edges_df` - A dataframe with edge attributes, including regulatory interactions and confidence scores.
}
}
\description{
This function runs CARNIVAL, either in **inverse mode** (without perturbations)
or **vanilla mode** (with perturbations), and generates an optimized network
using **igraph**. The output network is based on the given naive regulatory
interactions and inferred protein activity scores.
}
\examples{
\dontrun{
toy_carnival_input <- data.frame(UNIPROT = c('P42345', 'SIGNOR-C15', 'P31749', 'P15336'),
          gene_name = c('MTOR', 'AMPK', 'AKT1', 'ATF2'),
          mf = c('rec', 'rec', 'kin', 'tf'),
          method = c('user', 'user', 'VIPER', 'VIPER'),
          final_score = c(-1, 1, -2.64, 4.48))
# Example dataset of perturbations (source nodes)
receptors_df <- toy_carnival_input \%>\% dplyr::filter(mf == 'rec')

# Example dataset of targets (continuous values)
target_df <- toy_carnival_input \%>\%
dplyr::filter(mf \%in\% c('kin', 'phos', 'other'))

# Example naive network in SIF format
toy_naive_network_sif <- data.frame(from = c("MTOR", "AKT1", "AMPK"), 
                                    interaction = c('-1', '1', '1'), 
                                    to = c("AKT1", "ATF2", "MTOR"))

# Example inferred protein dataset
data(toy_prot_activity_df)

# Load default CARNIVAL options
carnival_options <- default_CARNIVAL_options(solver = "cplex")

# Run CARNIVAL and generate optimized network
optimized_network <- run_carnival_and_create_graph(
  source_df, target_df, toy_naive_network, carnival_options,
  proteins_df, organism = "human",
  files = FALSE)
}
}
\seealso{
[add_output_carnival_nodes_attributes()] [add_output_carnival_edges_attributes()]
}
