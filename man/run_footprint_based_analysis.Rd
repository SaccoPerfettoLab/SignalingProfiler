% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/footprint_prediction.R
\name{run_footprint_based_analysis}
\alias{run_footprint_based_analysis}
\title{Run Footprint-Based Protein Activity Analysis}
\usage{
run_footprint_based_analysis(
  omic_data,
  analysis,
  organism,
  reg_minsize,
  exp_sign = FALSE,
  integrated_regulons = FALSE,
  collectri = FALSE,
  hypergeom_corr = TRUE,
  correct_proteomics = FALSE,
  prot_df = NULL,
  GO_annotation = FALSE,
  custom = FALSE,
  custom_path = NULL
)
}
\arguments{
\item{omic_data}{A dataframe of measured transcript (for `"tfea"`) or phosphosites (for `"ksea"`).}

\item{analysis}{A string specifying the type of analysis (`"tfea"` or `"ksea"`).}

\item{organism}{Character string, either `"human"` or `"mouse"`, specifying the organism.}

\item{reg_minsize}{Integer, minimum regulon size for VIPER.}

\item{exp_sign}{Logical value indicating whether to filter for significant analytes.
If `TRUE`, only significant analytes (where `significant == '+'`) are included.}

\item{integrated_regulons}{Logical, indicating whether to use regulons
derived from experimental data (Ser/Thr and Tyr Kinome Atlas (PMIDs: 36631611, 38720073)). Default: `FALSE`.}

\item{collectri}{Logical, indicating whether to use CollecTRI regulons
(only applicable to  `"tfea" `). Default: `FALSE`.}

\item{hypergeom_corr}{Logical indicating whether to apply hypergeometric correction.}

\item{correct_proteomics}{Logical indicating whether to adjust results using proteomics data.}

\item{prot_df}{A dataframe containing proteomics data (required if `correct_proteomics = TRUE`).}

\item{GO_annotation}{Logical indicating whether to perform GO molecular function annotation using [molecular_function_annotation].}

\item{custom}{Logical indicating whether to use a custom regulon dataset. Default: `FALSE`.}

\item{custom_path}{String specifying the file path to a custom regulon dataset (if `custom = TRUE`). Default: `NULL`.}
}
\value{
A dataframe containing inferred transcription factors (TFEA) or kinases/phosphatases (KSEA).
The dataframe contains:
\describe{
 \item{`UNIPROT`}{The UNIPROT identifier.}
  \item{`gene_name`}{The gene symbol.}
  \item{`NES`}{The inferred activity score by VIPER.}
  \item{`pvalue`}{The inferred activity associated p-value by VIPER.}
  \item{`reg_exp_meas`}{The number of regulons targets experimentally measured in omics data.}
  \item{`reg_exp_sign`}{The number of regulons targets significantly modulated in omics data.}
  \item{`pWeight`}{The hypergeometric test derived  p-value.}
  \item{`raw_weight`}{The -logarithm of hypergeometric test p-value.}
  \item{`weight`}{The scaled logarithm of hypergeometric test p-value.}
  \item{`weightedNES`}{`NES` multiplied by `weight`, inferred activity weighted on the number of significantly modulated regulons members.}
  \item{`mf`}{GO Molecular Function tailored on signaling.}
}
}
\description{
This function performs footprint-based analysis using VIPER to infer protein activities from omics data.
- `'analysis=='tfea'`: it performs transcription factor enrichment analysis (TFEA) from transcriptomics data;
  transcription factors-target genes pairs are from either Dorothea+SIGNOR or CollecTRI+SIGNOR.
- `'analysis=='ksea'`: it performs kinase substrates enrichment analysis (KSEA) from phosphoproteomics data;
  kinase/phosphatase-phosphosites pairs are from OmniPath+SIGNOR and can be integrated with pairs derived from
  experimental data collected in Serine/Threonine/Tyrosine Kinome Atlas (PMIDs: 36631611, 38720073).
If `'hypergeom_corr==TRUE`, VIPER activity score is weighted on the number of significant analytes within the regulon.
If `'correct_proteomics==TRUE`, VIPER output is turned significant considering proteomics fold-change of analytes.
If VIPER returns non-significant modulation but the same modulation is significant in proteomics,
includes the analyte in VIPER result.
}
\details{
Custom set of regulons can be provided using `custom` and `custom_path` parameters.
}
\examples{

# Transcription Factor Enrichment Analysis Example
data('tr_toy_df')
tfea_df <- run_footprint_based_analysis(omic_data = tr_toy_df,
                                        analysis = "tfea",
                                        organism = "human",
                                        reg_minsize = 10,
                                        hypergeom_corr = TRUE,
                                        collectri = FALSE,
                                        GO_annotation = TRUE)
# Kinase Enrichment Analysis Example
data('phospho_toy_df')
ksea_df <- run_footprint_based_analysis(omic_data = phospho_toy_df,
                                        analysis = "ksea",
                                        organism = "human",
                                        reg_minsize = 5,
                                        hypergeom_corr = TRUE,
                                        integrated_regulons = TRUE,
                                        GO_annotation = TRUE)

}
